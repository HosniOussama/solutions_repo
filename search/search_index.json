{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Technical setup Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft) Useful links Python Miniconda Documentation Google Colab How to use this repository Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW Where can I find the problems? Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Introduction"},{"location":"#introduction","text":"","title":"Introduction"},{"location":"#technical-setup","text":"Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft)","title":"Technical setup"},{"location":"#useful-links","text":"Python Miniconda Documentation Google Colab","title":"Useful links"},{"location":"#how-to-use-this-repository","text":"Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW","title":"How to use this repository"},{"location":"#where-can-i-find-the-problems","text":"Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Where can I find the problems?"},{"location":"1%20Physics/1%20Mechanics/Problem_1/","text":"Investigating the Range as a Function of the Angle of Projection Motivation Projectile motion is a fundamental concept in physics, illustrating how objects move under gravity. This study explores how the range of a projectile depends on its launch angle, uncovering both theoretical and computational insights. Theoretical Foundation The motion of a projectile follows these kinematic equations: Horizontal motion: \\(x = v_0 \\cos(\\theta) t\\) Vertical motion: \\(y = v_0 \\sin(\\theta) t - \\frac{1}{2} g t^2\\) Time of flight: \\(T = \\frac{2 v_0 \\sin(\\theta)}{g}\\) Range equation: \\(R = \\frac{v_0^2 \\sin(2\\theta)}{g}\\) Python Simulation import numpy as np import matplotlib.pyplot as plt g = 9.81 # gravitational acceleration (m/s^2) v0 = 20 # initial velocity (m/s) theta = np.linspace(0, np.pi/2, 100) R = (v0**2 * np.sin(2*theta)) / g plt.plot(np.degrees(theta), R) plt.xlabel(\"Launch Angle (degrees)\") plt.ylabel(\"Range (m)\") plt.title(\"Projectile Range vs. Launch Angle\") plt.grid() plt.show() Investigating the Dynamics of a Forced Damped Pendulum Motivation The forced damped pendulum exhibits complex behaviors such as resonance and chaos. Understanding its motion helps in various applications, from engineering to climate models. Theoretical Foundation The equation of motion for a forced damped pendulum is: \\(\\frac{d^2\\theta}{dt^2} + b\\frac{d\\theta}{dt} + \\omega_0^2 \\sin\\theta = A \\cos(\\omega t)\\) Python Simulation from scipy.integrate import solve_ivp def pendulum(t, y, b, w0, A, w): theta, omega = y return [omega, -b*omega - w0**2*np.sin(theta) + A*np.cos(w*t)] b, w0, A, w = 0.1, 1.0, 0.5, 2.0 t = np.linspace(0, 50, 1000) sol = solve_ivp(pendulum, [0, 50], [np.pi/4, 0], args=(b, w0, A, w), t_eval=t) plt.plot(t, sol.y[0]) plt.xlabel(\"Time (s)\") plt.ylabel(\"Angle (rad)\") plt.title(\"Forced Damped Pendulum Motion\") plt.grid() plt.show() Orbital Period and Orbital Radius Motivation Kepler's Third Law states that the square of the orbital period is proportional to the cube of the orbital radius. This principle is key in astrophysics and satellite design. Theoretical Foundation For circular orbits: \\(T^2 = \\frac{4\\pi^2 r^3}{GM}\\) Python Simulation G = 6.674e-11 # Gravitational constant (m^3/kg/s^2) M = 5.972e24 # Earth mass (kg) r = np.linspace(6.7e6, 4e7, 100) # Orbital radius range (m) T = 2 * np.pi * np.sqrt(r**3 / (G * M)) plt.plot(r / 1e6, T / 3600) plt.xlabel(\"Orbital Radius (million m)\") plt.ylabel(\"Orbital Period (hours)\") plt.title(\"Orbital Period vs. Radius\") plt.grid() plt.show() Conclusion These simulations provide insights into projectile motion, pendulums, and orbits, demonstrating their dependence on key parameters. Further refinements could include air resistance and non-linear effects to enhance realism.","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#investigating-the-range-as-a-function-of-the-angle-of-projection","text":"","title":"Investigating the Range as a Function of the Angle of Projection"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#motivation","text":"Projectile motion is a fundamental concept in physics, illustrating how objects move under gravity. This study explores how the range of a projectile depends on its launch angle, uncovering both theoretical and computational insights.","title":"Motivation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#theoretical-foundation","text":"The motion of a projectile follows these kinematic equations: Horizontal motion: \\(x = v_0 \\cos(\\theta) t\\) Vertical motion: \\(y = v_0 \\sin(\\theta) t - \\frac{1}{2} g t^2\\) Time of flight: \\(T = \\frac{2 v_0 \\sin(\\theta)}{g}\\) Range equation: \\(R = \\frac{v_0^2 \\sin(2\\theta)}{g}\\)","title":"Theoretical Foundation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#python-simulation","text":"import numpy as np import matplotlib.pyplot as plt g = 9.81 # gravitational acceleration (m/s^2) v0 = 20 # initial velocity (m/s) theta = np.linspace(0, np.pi/2, 100) R = (v0**2 * np.sin(2*theta)) / g plt.plot(np.degrees(theta), R) plt.xlabel(\"Launch Angle (degrees)\") plt.ylabel(\"Range (m)\") plt.title(\"Projectile Range vs. Launch Angle\") plt.grid() plt.show()","title":"Python Simulation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#investigating-the-dynamics-of-a-forced-damped-pendulum","text":"","title":"Investigating the Dynamics of a Forced Damped Pendulum"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#motivation_1","text":"The forced damped pendulum exhibits complex behaviors such as resonance and chaos. Understanding its motion helps in various applications, from engineering to climate models.","title":"Motivation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#theoretical-foundation_1","text":"The equation of motion for a forced damped pendulum is: \\(\\frac{d^2\\theta}{dt^2} + b\\frac{d\\theta}{dt} + \\omega_0^2 \\sin\\theta = A \\cos(\\omega t)\\)","title":"Theoretical Foundation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#python-simulation_1","text":"from scipy.integrate import solve_ivp def pendulum(t, y, b, w0, A, w): theta, omega = y return [omega, -b*omega - w0**2*np.sin(theta) + A*np.cos(w*t)] b, w0, A, w = 0.1, 1.0, 0.5, 2.0 t = np.linspace(0, 50, 1000) sol = solve_ivp(pendulum, [0, 50], [np.pi/4, 0], args=(b, w0, A, w), t_eval=t) plt.plot(t, sol.y[0]) plt.xlabel(\"Time (s)\") plt.ylabel(\"Angle (rad)\") plt.title(\"Forced Damped Pendulum Motion\") plt.grid() plt.show()","title":"Python Simulation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#orbital-period-and-orbital-radius","text":"","title":"Orbital Period and Orbital Radius"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#motivation_2","text":"Kepler's Third Law states that the square of the orbital period is proportional to the cube of the orbital radius. This principle is key in astrophysics and satellite design.","title":"Motivation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#theoretical-foundation_2","text":"For circular orbits: \\(T^2 = \\frac{4\\pi^2 r^3}{GM}\\)","title":"Theoretical Foundation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#python-simulation_2","text":"G = 6.674e-11 # Gravitational constant (m^3/kg/s^2) M = 5.972e24 # Earth mass (kg) r = np.linspace(6.7e6, 4e7, 100) # Orbital radius range (m) T = 2 * np.pi * np.sqrt(r**3 / (G * M)) plt.plot(r / 1e6, T / 3600) plt.xlabel(\"Orbital Radius (million m)\") plt.ylabel(\"Orbital Period (hours)\") plt.title(\"Orbital Period vs. Radius\") plt.grid() plt.show()","title":"Python Simulation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#conclusion","text":"These simulations provide insights into projectile motion, pendulums, and orbits, demonstrating their dependence on key parameters. Further refinements could include air resistance and non-linear effects to enhance realism.","title":"Conclusion"},{"location":"1%20Physics/1%20Mechanics/Problem_2/","text":"Investigating the Dynamics of a Forced Damped Pendulum Motivation The forced damped pendulum is a fascinating system where damping, restoring forces, and external periodic forcing interact to create diverse motion patterns. The system transitions from simple harmonic motion to resonance, chaos, and quasiperiodic behavior. These dynamics are essential in various real-world applications, including energy harvesting, structural engineering, and nonlinear oscillatory systems. By systematically varying damping, driving amplitude, and driving frequency, we can observe different behaviors such as synchronized oscillations, resonance, and chaotic motion. Understanding these phenomena helps in designing better mechanical systems, reducing unwanted vibrations, and optimizing energy transfer in oscillatory systems. 1. Theoretical Foundation The motion of a forced damped pendulum is governed by the differential equation: \\[\\frac{d^2\\theta}{dt^2} + b\\frac{d\\theta}{dt} + \\frac{g}{l} \\sin\\theta = A \\cos(\\omega t)\\] where: \\(\\theta\\) is the angular displacement, \\(b\\) is the damping coefficient, \\(g\\) is gravitational acceleration, \\(l\\) is the length of the pendulum, \\(A\\) is the amplitude of the external forcing, \\(\\omega\\) is the driving frequency. Small-Angle Approximation For small angles ( \\(\\theta\\approx\\) \\(\\sin\\) \\(\\theta\\) ), the equation simplifies to: \\[\\frac{d^2\\theta}{dt^2} + b\\frac{d\\theta}{dt} + \\frac{g}{l} \\theta = A \\cos(\\omega t)\\] This is a damped, driven harmonic oscillator with an analytical solution in the form: \\[\\theta(t) = \\theta_0 e^{-bt/2} \\cos(\\omega t + \\phi)\\] where \\(\\theta_0\\) is the initial amplitude, and \\(\\phi\\) is a phase shift. Resonance Conditions Resonance occurs when the driving frequency matches the system's natural frequency: \\[\\omega = \\sqrt{\\frac{g}{l} - \\frac{b^2}{4}}\\] At resonance, the system absorbs maximum energy, leading to large oscillations. 2. Analysis of Dynamics Effect of Parameters on Motion 1. Damping Coefficient ( \\(b\\) ): Higher damping reduces oscillations and suppresses chaotic motion. 2. Driving Amplitude ( \\(A\\) ): Increased forcing can lead to resonance or chaotic behavior. 3. Driving Frequency ( \\(\\omega\\) ): Tuning the frequency can shift the system from periodic to chaotic regimes. Chaos and Transition to Irregular Motion When forcing is strong and damping is moderate, the system can enter chaotic motion, characterized by sensitive dependence on initial conditions. This is analyzed using Poincar\u00e9 sections and bifurcation diagrams . 3. Practical Applications Energy Harvesting: Used in devices that convert oscillatory motion into electricity. Suspension Bridges: Understanding resonance helps prevent structural failures (e.g., Tacoma Narrows Bridge collapse). Biomechanics: Models human gait and oscillatory movements. Electrical Circuits: Analogous to driven RLC circuits. 4. Computational Model & Simulations We use Python to simulate the forced damped pendulum with the Runge-Kutta method for numerical integration. Python Script (forced_damped_pendulum.py) import numpy as np import matplotlib.pyplot as plt from scipy.integrate import solve_ivp # Define system parameters g = 9.81 # Gravity (m/s^2) l = 1.0 # Length of pendulum (m) b = 0.2 # Damping coefficient A = 1.2 # Driving force amplitude omega = 2.0 # Driving frequency # Equations of motion def pendulum_eq(t, y): theta, omega_p = y dtheta_dt = omega_p domega_dt = -b * omega_p - (g/l) * np.sin(theta) + A * np.cos(omega * t) return [dtheta_dt, domega_dt] # Time span and initial conditions t_span = [0, 50] y0 = [0.5, 0] # Initial angle and velocity t_eval = np.linspace(0, 50, 1000) # Solve the system sol = solve_ivp(pendulum_eq, t_span, y0, t_eval=t_eval) # Plot results plt.figure(figsize=(8, 5)) plt.plot(sol.t, sol.y[0], label=\"Angle (\u03b8)\") plt.xlabel(\"Time (s)\") plt.ylabel(\"Angle (rad)\") plt.title(\"Forced Damped Pendulum Motion\") plt.legend() plt.grid() plt.show() 5. Graphical Representations 1. Time Evolution of Motion (Plot showing pendulum angle over time.) 2. Phase Portraits \\[{{\\text{Plot } (\\theta, \\dot{\\theta}) \\text{ to visualize motion in phase space.}}}\\] 3. Poincar\u00e9 Sections \\[\\text Stroboscopic map of the system, revealing periodic or chaotic behavior.\\] 4. Bifurcation Diagrams \\[\\text Graph showing transition to chaos as the driving force increases.\\] 6. Discussion on Model Limitations & Extensions Limitations *** The small-angle approximation fails for large oscillations. *** The model assumes a simple sinusoidal driving force. Possible Extensions *** Nonlinear Damping: More realistic energy dissipation models. *** Non-Periodic Forcing: Studying real-world irregular driving forces. *** Coupled Pendulums: Exploring synchronization and complex dynamics.** Conclusion The forced damped pendulum provides insights into nonlinear dynamics, resonance, and chaos. By tuning parameters, we observe a transition from regular motion to chaos, revealing fundamental principles that apply to various fields of science and engineering.","title":"Investigating the Dynamics of a Forced Damped Pendulum"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#investigating-the-dynamics-of-a-forced-damped-pendulum","text":"","title":"Investigating the Dynamics of a Forced Damped Pendulum"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#motivation","text":"The forced damped pendulum is a fascinating system where damping, restoring forces, and external periodic forcing interact to create diverse motion patterns. The system transitions from simple harmonic motion to resonance, chaos, and quasiperiodic behavior. These dynamics are essential in various real-world applications, including energy harvesting, structural engineering, and nonlinear oscillatory systems. By systematically varying damping, driving amplitude, and driving frequency, we can observe different behaviors such as synchronized oscillations, resonance, and chaotic motion. Understanding these phenomena helps in designing better mechanical systems, reducing unwanted vibrations, and optimizing energy transfer in oscillatory systems.","title":"Motivation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#1-theoretical-foundation","text":"The motion of a forced damped pendulum is governed by the differential equation: \\[\\frac{d^2\\theta}{dt^2} + b\\frac{d\\theta}{dt} + \\frac{g}{l} \\sin\\theta = A \\cos(\\omega t)\\] where: \\(\\theta\\) is the angular displacement, \\(b\\) is the damping coefficient, \\(g\\) is gravitational acceleration, \\(l\\) is the length of the pendulum, \\(A\\) is the amplitude of the external forcing, \\(\\omega\\) is the driving frequency.","title":"1. Theoretical Foundation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#small-angle-approximation","text":"For small angles ( \\(\\theta\\approx\\) \\(\\sin\\) \\(\\theta\\) ), the equation simplifies to: \\[\\frac{d^2\\theta}{dt^2} + b\\frac{d\\theta}{dt} + \\frac{g}{l} \\theta = A \\cos(\\omega t)\\] This is a damped, driven harmonic oscillator with an analytical solution in the form: \\[\\theta(t) = \\theta_0 e^{-bt/2} \\cos(\\omega t + \\phi)\\] where \\(\\theta_0\\) is the initial amplitude, and \\(\\phi\\) is a phase shift.","title":"Small-Angle Approximation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#resonance-conditions","text":"Resonance occurs when the driving frequency matches the system's natural frequency: \\[\\omega = \\sqrt{\\frac{g}{l} - \\frac{b^2}{4}}\\] At resonance, the system absorbs maximum energy, leading to large oscillations.","title":"Resonance Conditions"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#2-analysis-of-dynamics","text":"","title":"2. Analysis of Dynamics"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#effect-of-parameters-on-motion","text":"1. Damping Coefficient ( \\(b\\) ): Higher damping reduces oscillations and suppresses chaotic motion. 2. Driving Amplitude ( \\(A\\) ): Increased forcing can lead to resonance or chaotic behavior. 3. Driving Frequency ( \\(\\omega\\) ): Tuning the frequency can shift the system from periodic to chaotic regimes.","title":"Effect of Parameters on Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#chaos-and-transition-to-irregular-motion","text":"When forcing is strong and damping is moderate, the system can enter chaotic motion, characterized by sensitive dependence on initial conditions. This is analyzed using Poincar\u00e9 sections and bifurcation diagrams .","title":"Chaos and Transition to Irregular Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#3-practical-applications","text":"Energy Harvesting: Used in devices that convert oscillatory motion into electricity. Suspension Bridges: Understanding resonance helps prevent structural failures (e.g., Tacoma Narrows Bridge collapse). Biomechanics: Models human gait and oscillatory movements. Electrical Circuits: Analogous to driven RLC circuits.","title":"3. Practical Applications"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#4-computational-model-simulations","text":"We use Python to simulate the forced damped pendulum with the Runge-Kutta method for numerical integration.","title":"4. Computational Model &amp; Simulations"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#python-script-forced_damped_pendulumpy","text":"import numpy as np import matplotlib.pyplot as plt from scipy.integrate import solve_ivp # Define system parameters g = 9.81 # Gravity (m/s^2) l = 1.0 # Length of pendulum (m) b = 0.2 # Damping coefficient A = 1.2 # Driving force amplitude omega = 2.0 # Driving frequency # Equations of motion def pendulum_eq(t, y): theta, omega_p = y dtheta_dt = omega_p domega_dt = -b * omega_p - (g/l) * np.sin(theta) + A * np.cos(omega * t) return [dtheta_dt, domega_dt] # Time span and initial conditions t_span = [0, 50] y0 = [0.5, 0] # Initial angle and velocity t_eval = np.linspace(0, 50, 1000) # Solve the system sol = solve_ivp(pendulum_eq, t_span, y0, t_eval=t_eval) # Plot results plt.figure(figsize=(8, 5)) plt.plot(sol.t, sol.y[0], label=\"Angle (\u03b8)\") plt.xlabel(\"Time (s)\") plt.ylabel(\"Angle (rad)\") plt.title(\"Forced Damped Pendulum Motion\") plt.legend() plt.grid() plt.show()","title":"Python Script (forced_damped_pendulum.py)"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#5-graphical-representations","text":"","title":"5. Graphical Representations"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#1-time-evolution-of-motion","text":"(Plot showing pendulum angle over time.)","title":"1. Time Evolution of Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#2-phase-portraits","text":"\\[{{\\text{Plot } (\\theta, \\dot{\\theta}) \\text{ to visualize motion in phase space.}}}\\]","title":"2. Phase Portraits"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#3-poincare-sections","text":"\\[\\text Stroboscopic map of the system, revealing periodic or chaotic behavior.\\]","title":"3. Poincar\u00e9 Sections"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#4-bifurcation-diagrams","text":"\\[\\text Graph showing transition to chaos as the driving force increases.\\]","title":"4. Bifurcation Diagrams"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#6-discussion-on-model-limitations-extensions","text":"","title":"6. Discussion on Model Limitations &amp; Extensions"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#limitations","text":"*** The small-angle approximation fails for large oscillations. *** The model assumes a simple sinusoidal driving force.","title":"Limitations"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#possible-extensions","text":"*** Nonlinear Damping: More realistic energy dissipation models. *** Non-Periodic Forcing: Studying real-world irregular driving forces. *** Coupled Pendulums: Exploring synchronization and complex dynamics.**","title":"Possible Extensions"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#conclusion","text":"The forced damped pendulum provides insights into nonlinear dynamics, resonance, and chaos. By tuning parameters, we observe a transition from regular motion to chaos, revealing fundamental principles that apply to various fields of science and engineering.","title":"Conclusion"},{"location":"1%20Physics/2%20Gravity/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_2/","text":"Problem 2 Problem 2 Escape Velocities and Cosmic Velocities Motivation Understanding escape velocity is crucial for space exploration. The first, second, and third cosmic velocities define the speed needed to: Stay in orbit (first cosmic velocity). Escape a planet\u2019s gravity (second cosmic velocity). Leave a star system (third cosmic velocity). These concepts are fundamental for launching satellites, interplanetary travel, and deep-space missions. Cosmic Velocities Definitions First Cosmic Velocity (Orbital Velocity) The minimum speed required to stay in a circular orbit around a planet. Derived from: \\(v1\\) \\ =$ \\(RGM\u200b\\) \u200b Second Cosmic Velocity (Escape Velocity) The speed needed to break free from a planet\u2019s gravity without further propulsion. \u200b\u201cv2\u200b\\=2\u200b\u22c5v1\u200b\\=R2GM\u200b\u200b\u201d Third Cosmic Velocity (Interstellar Escape) The velocity required to leave the Sun\u2019s gravitational influence: \ud835\udc63\u201cv3\u200b\\=2\u200b\u22c5dGM\u2299\u200b\u200b\u200b\u201d where \\(M \u2299\\) is the Sun\u2019s mass and \\(\ud835\udc51\\) is the distance from the Sun. Calculations for Earth, Mars, and Jupiter Using standard gravitational values: Planet Mass ( \\(kg\\) ) Radius ( \\(m\\) ) First Cosmic Velocity ( \\(km/s\\) ) Second Cosmic Velocity ( \\(km/s\\) ) Earth $$5.972 \u00d7 10 24 5.972\u00d710 24 6.371 \u00d7 10 6 6.371\u00d710 6 7.91 11.19 $$ Mars $$ 6.39 \u00d7 10 23 6.39\u00d710 23 3.389 \u00d7 10 6 3.389\u00d710 6 3.55 5.03 $$ Jupiter $$1.898 \u00d7 10 27 1.898\u00d710 27 6.991 \u00d7 10 7 6.991\u00d710 7 42.1 59.5$$ Python Implementation Python Script (cosmic_velocities.py) python Copy Edit import math Gravitational constant ( \\(m^3 kg^-1 s^-2\\) ) \\[ G = 6.67430e-11 \\] Celestial body data (mass in kg, radius in meters) celestial_bodies = { \"Earth\": {\"mass\": 5.972e24, \"radius\": 6.371e6, \"distance_sun\": 1.496e11}, \"Mars\": {\"mass\": 6.39e23, \"radius\": 3.389e6, \"distance_sun\": 2.279e11}, \"Jupiter\": {\"mass\": 1.898e27, \"radius\": 6.991e7, \"distance_sun\": 7.785e11} } def first_cosmic_velocity(mass, radius): return math.sqrt(G * mass / radius) def second_cosmic_velocity(mass, radius): return math.sqrt(2) * first_cosmic_velocity(mass, radius) def third_cosmic_velocity(mass_sun, distance): return math.sqrt(2 * G * mass_sun / distance) Sun's mass mass_sun = 1.989e30 Compute and display results for body, data in celestial_bodies.items(): v1 = first_cosmic_velocity(data[\"mass\"], data[\"radius\"]) / 1000 # km/s v2 = second_cosmic_velocity(data[\"mass\"], data[\"radius\"]) / 1000 # km/s v3 = third_cosmic_velocity(mass_sun, data[\"distance_sun\"]) / 1000 # km/s print(f\"{body}:\") print(f\" First Cosmic Velocity: {v1:.2f} km/s\") print(f\" Second Cosmic Velocity: {v2:.2f} km/s\") print(f\" Third Cosmic Velocity: {v3:.2f} km/s\\n\") Jupyter Notebook (Interactive Simulations) The accompanying Jupyter Notebook contains: Detailed explanations Interactive graphs Velocity comparisons across planets @ Download Jupyter Notebook (Link to the file on your site)@ Graphical Representations Below is a sample visualization of escape velocities for different planets: (Include a velocity vs. planet graph from the Jupyter Notebook output.) Importance in Space Exploration Satellites: Need at least the first cosmic velocity. Moon & Mars Missions: Require second cosmic velocity to leave Earth. Interstellar Travel: Future missions must reach the third cosmic velocity. Conclusion Understanding cosmic velocities is key to space travel. With this knowledge, we can design better rockets, plan efficient space missions, and explore beyond our solar system.","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_2/#problem-2_1","text":"","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_2/#escape-velocities-and-cosmic-velocities","text":"","title":"Escape Velocities and Cosmic Velocities"},{"location":"1%20Physics/2%20Gravity/Problem_2/#motivation","text":"Understanding escape velocity is crucial for space exploration. The first, second, and third cosmic velocities define the speed needed to: Stay in orbit (first cosmic velocity). Escape a planet\u2019s gravity (second cosmic velocity). Leave a star system (third cosmic velocity). These concepts are fundamental for launching satellites, interplanetary travel, and deep-space missions.","title":"Motivation"},{"location":"1%20Physics/2%20Gravity/Problem_2/#cosmic-velocities-definitions","text":"","title":"Cosmic Velocities Definitions"},{"location":"1%20Physics/2%20Gravity/Problem_2/#first-cosmic-velocity-orbital-velocity","text":"The minimum speed required to stay in a circular orbit around a planet. Derived from: \\(v1\\) \\ =$ \\(RGM\u200b\\) \u200b","title":"First Cosmic Velocity (Orbital Velocity)"},{"location":"1%20Physics/2%20Gravity/Problem_2/#second-cosmic-velocity-escape-velocity","text":"The speed needed to break free from a planet\u2019s gravity without further propulsion. \u200b\u201cv2\u200b\\=2\u200b\u22c5v1\u200b\\=R2GM\u200b\u200b\u201d Third Cosmic Velocity (Interstellar Escape) The velocity required to leave the Sun\u2019s gravitational influence: \ud835\udc63\u201cv3\u200b\\=2\u200b\u22c5dGM\u2299\u200b\u200b\u200b\u201d where \\(M \u2299\\) is the Sun\u2019s mass and \\(\ud835\udc51\\) is the distance from the Sun. Calculations for Earth, Mars, and Jupiter Using standard gravitational values: Planet Mass ( \\(kg\\) ) Radius ( \\(m\\) ) First Cosmic Velocity ( \\(km/s\\) ) Second Cosmic Velocity ( \\(km/s\\) ) Earth $$5.972 \u00d7 10 24 5.972\u00d710 24 6.371 \u00d7 10 6 6.371\u00d710 6 7.91 11.19 $$ Mars $$ 6.39 \u00d7 10 23 6.39\u00d710 23 3.389 \u00d7 10 6 3.389\u00d710 6 3.55 5.03 $$ Jupiter $$1.898 \u00d7 10 27 1.898\u00d710 27 6.991 \u00d7 10 7 6.991\u00d710 7 42.1 59.5$$","title":"Second Cosmic Velocity (Escape Velocity)"},{"location":"1%20Physics/2%20Gravity/Problem_2/#python-implementation","text":"","title":"Python Implementation"},{"location":"1%20Physics/2%20Gravity/Problem_2/#python-script-cosmic_velocitiespy","text":"python Copy Edit import math","title":"Python Script (cosmic_velocities.py)"},{"location":"1%20Physics/2%20Gravity/Problem_2/#gravitational-constant-m3-kg-1-s-2","text":"\\[ G = 6.67430e-11 \\]","title":"Gravitational constant (\\(m^3 kg^-1 s^-2\\))"},{"location":"1%20Physics/2%20Gravity/Problem_2/#celestial-body-data-mass-in-kg-radius-in-meters","text":"celestial_bodies = { \"Earth\": {\"mass\": 5.972e24, \"radius\": 6.371e6, \"distance_sun\": 1.496e11}, \"Mars\": {\"mass\": 6.39e23, \"radius\": 3.389e6, \"distance_sun\": 2.279e11}, \"Jupiter\": {\"mass\": 1.898e27, \"radius\": 6.991e7, \"distance_sun\": 7.785e11} } def first_cosmic_velocity(mass, radius): return math.sqrt(G * mass / radius) def second_cosmic_velocity(mass, radius): return math.sqrt(2) * first_cosmic_velocity(mass, radius) def third_cosmic_velocity(mass_sun, distance): return math.sqrt(2 * G * mass_sun / distance)","title":"Celestial body data (mass in kg, radius in meters)"},{"location":"1%20Physics/2%20Gravity/Problem_2/#suns-mass","text":"mass_sun = 1.989e30","title":"Sun's mass"},{"location":"1%20Physics/2%20Gravity/Problem_2/#compute-and-display-results","text":"for body, data in celestial_bodies.items(): v1 = first_cosmic_velocity(data[\"mass\"], data[\"radius\"]) / 1000 # km/s v2 = second_cosmic_velocity(data[\"mass\"], data[\"radius\"]) / 1000 # km/s v3 = third_cosmic_velocity(mass_sun, data[\"distance_sun\"]) / 1000 # km/s print(f\"{body}:\") print(f\" First Cosmic Velocity: {v1:.2f} km/s\") print(f\" Second Cosmic Velocity: {v2:.2f} km/s\") print(f\" Third Cosmic Velocity: {v3:.2f} km/s\\n\")","title":"Compute and display results"},{"location":"1%20Physics/2%20Gravity/Problem_2/#jupyter-notebook-interactive-simulations","text":"The accompanying Jupyter Notebook contains: Detailed explanations Interactive graphs Velocity comparisons across planets @ Download Jupyter Notebook (Link to the file on your site)@","title":"Jupyter Notebook (Interactive Simulations)"},{"location":"1%20Physics/2%20Gravity/Problem_2/#graphical-representations","text":"Below is a sample visualization of escape velocities for different planets: (Include a velocity vs. planet graph from the Jupyter Notebook output.)","title":"Graphical Representations"},{"location":"1%20Physics/2%20Gravity/Problem_2/#importance-in-space-exploration","text":"Satellites: Need at least the first cosmic velocity. Moon & Mars Missions: Require second cosmic velocity to leave Earth. Interstellar Travel: Future missions must reach the third cosmic velocity.","title":"Importance in Space Exploration"},{"location":"1%20Physics/2%20Gravity/Problem_2/#conclusion","text":"Understanding cosmic velocities is key to space travel. With this knowledge, we can design better rockets, plan efficient space missions, and explore beyond our solar system.","title":"Conclusion"},{"location":"1%20Physics/2%20Gravity/Problem_3/","text":"Problem 3","title":"Problem 3"},{"location":"1%20Physics/2%20Gravity/Problem_3/#problem-3","text":"","title":"Problem 3"},{"location":"1%20Physics/3%20Waves/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/3%20Waves/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/6%20Statistics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/7%20Measurements/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/7%20Measurements/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"2%20Mathematics/1%20Linear_algebra/","text":"Linear Algebra","title":"Linear Algebra"},{"location":"2%20Mathematics/1%20Linear_algebra/#linear-algebra","text":"","title":"Linear Algebra"},{"location":"2%20Mathematics/2%20Analytic_geometry/","text":"Analytic geometry","title":"Analytic geometry"},{"location":"2%20Mathematics/2%20Analytic_geometry/#analytic-geometry","text":"","title":"Analytic geometry"},{"location":"2%20Mathematics/3%20Calculus/","text":"Calculus","title":"Calculus"},{"location":"2%20Mathematics/3%20Calculus/#calculus","text":"","title":"Calculus"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/","text":"Set Theory","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/#set-theory","text":"","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/","text":"Relations","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/#relations","text":"","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/","text":"Functions","title":"Functions"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/#functions","text":"","title":"Functions"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/","text":"Combinatorics","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/#combinatorics","text":"","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/","text":"Number Theory","title":"Number Theory"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/#number-theory","text":"","title":"Number Theory"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/","text":"Sequences and Series","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/#sequences-and-series","text":"","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/","text":"Induction","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/#induction","text":"","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/","text":"Recurrence","title":"Recurrence"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/#recurrence","text":"","title":"Recurrence"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/","text":"Graph Theory","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/#graph-theory","text":"","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/","text":"Logic","title":"Logic"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/#logic","text":"","title":"Logic"}]}